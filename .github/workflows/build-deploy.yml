name: Build and Deploy Code Update!

on: [pull_request, push ]

jobs:
    job1:
        env:
            DB_NAME: ${{ secrets.DB_NAME }}
            DB_USER: ${{ secrets.DB_USER }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DB_HOST: ${{ secrets.DB_HOST }}
            DB_PORT: ${{ secrets.DB_PORT }}
            TESTDB_URL: postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:5433/${{ secrets.DB_NAME }}_testdb
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
            ALGORITHM: ${{ secrets.ALGORITHM }}
            ACCESS_TOKEN_EXPIRE_MINS: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINS }}

        services:
            postgres:
              image: postgres
              env:
                POSTGRES_USER: ${{ secrets.DB_USER }}
                POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
                POSTGRES_DB: ${{ secrets.DB_NAME }}_testdb
              ports:
                - 5432:5432
              options: >-
                --health-cmd pg_isready
                --health-interval 10s
                --health-timeout 5s
                --health-retries 5

            test_db: 
              image: postgres
              ports:
                - 5433:5432
              env:
                POSTGRES_DB: ${{ secrets.DB_NAME }}_test 
                POSTGRES_USER: ${{ secrets.DB_USER }}
                POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
              options: >- 
                --health-cmd pg_isready
                --health-interval 10s
                --health-timeout 5s


        runs-on: ubuntu-latest
        steps:
            - name: Pulling Git Repo
              uses: actions/checkout@v4

            - name: Install Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.10"

            - name: Update Pip
              run: python -m pip install --upgrade pip

            - name: Cache Dependencies
              uses: actions/cache@v3
              with:
                path: ~/.cache/pip/ 
                key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                restore-keys: |
                  ${{ runner.os }}-pip-

            - name: Install Dependencies
              run: pip install -r requirements.txt

            - name: Test with pytest
              run: |
                  pip install pytest
                  pytest

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and Push
              id: docker_build
              uses: docker/build-push-action@v6
              with:
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/fastapi:github
                  cache-from: type=local,src=/tmp/.buildx-cache
                  cache-to: type=local,dest=/tmp/.buildx-cache

            - name: Image digest
              run: echo ${{ steps.docker_build.outputs.digest }}
